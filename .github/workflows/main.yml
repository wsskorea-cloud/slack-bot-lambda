name: DevOps

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

  pull_request:
    branches:
      - main
    tags:
      - 'v*'

  workflow_dispatch:

jobs:
  build:
    if: github.event.base_ref == 'refs/heads/main'

    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup env
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/tags/v}

      - name: Docker setup QEMU
        uses: docker/setup-qemu-action@v2.0.0

      - name: Docker setup BuildX
        uses: docker/setup-buildx-action@v2.0.0

      - name: Login to Github Container Registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PACKAGE_ACCESS_TOKEN }}

      - name: Build and push to Github Container Registry
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ghcr.io/wsskorea-ict/slack-bot-lambda:${{ steps.vars.outputs.tag }}

      - name: Setup Python3
        uses: actions/setup-python@v3

      - name: Setup SAM
        uses: aws-actions/setup-sam@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build function using SAM
        run: sam build

      - name: Deploy function using SAM
        run: |
          sam deploy \
          	--no-confirm-changeset \
          	--no-fail-on-empty-changeset \
          	--stack-name slack-bot-lambda \
          	--parameter-overrides \
                LambdaFunctionExecutionRoleArn=${{ secrets.AWS_LAMBDA_FUNCTION_EXECUTION_ROLE_ARN }} \
                SlackIncomingWebhookUrl=${{ secrets.SLACK_INCOMING_WEBHOOK_URL }} \
                KmsKeyArn=${{ secrets.AWS_KMS_KEY_ARN }} \
                SqsArn=${{ secrets.AWS_SQS_ARN }} \
          	--s3-bucket ${{ secrets.AWS_S3_BUCKET }} \
          	--s3-prefix slack-bot-lambda \
          	--tags Project=Mail